<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd "
	default-init-method="init" default-lazy-init="false"
	default-destroy-method="destroy">

	<!-- 注解注入 -->
	<context:component-scan base-package="com.polaris">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 读入配置文件 -->
	<bean id="propertyConfigurer" class="com.polaris.comm.config.EncryptPropertyPlaceholderConfigurer">  
        <property name="locations">
	     	<list>
	        	 <value>classpath:config/application.properties</value>
	        	 <value>classpath:config/application_db.properties</value>
	        </list>
   		</property>
        <property name="fileEncoding" value="utf-8" /> 
    </bean>
    
	<!--自定义数据源-->
	<bean id="dataSource_db" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db.driverClassName}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" /> 
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<property name="minPoolSize" value="${db.minPoolSize}" />
		<property name="maxIdleTime" value="${db.maxIdleTime}" />
	</bean>
	<bean id="dataSource" class="com.polaris.comm.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSource_db" value-ref="dataSource_db" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_db"/>
	</bean>
	
	<!--配置myBatis数据库连接工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
    <bean id="sqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
          <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>
		
	<!-- 事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>