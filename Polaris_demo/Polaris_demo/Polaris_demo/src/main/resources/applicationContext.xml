<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://code.alibabatech.com/schema/dubbo  
           http://code.alibabatech.com/schema/dubbo/dubbo.xsd "
	default-init-method="init" default-lazy-init="false"
	default-destroy-method="destroy">
		
	<!-- 注解扫描 -->
	<context:annotation-config/>
	<aop:aspectj-autoproxy/> 
	<context:component-scan base-package="com.polaris" />
	
	<!-- 读入配置文件 -->
	<bean id="propertyConfigurer" class="com.polaris.comm.config.ConfPropertyPlaceholderConfigurer">  
        <property name="fileEncoding" value="utf-8" /> 
    </bean>

	<!-- 提供方应用信息，用于计算依赖关系，不要与消费方一样 --> 
	<dubbo:application name="${project.name}">
		<dubbo:parameter key="qos.enable" value="false"></dubbo:parameter>
	</dubbo:application>  
    
    <!-- 注册地址 -->  
    <dubbo:registry address="${dubbo.registry.address}" check="false" />  

    <!-- 用dubbo协议在20880端口暴露服务 ，注意不能与其他服务端口相同  -->
    <dubbo:protocol name="dubbo" port="${dubbo.protocol.port}" dispatcher="all" threadpool="${dubbo.protocol.threadpool}" threads="${dubbo.protocol.threads}" accepts="${dubbo.protocol.accepts}" />
    
    <!-- 服务提供方的参数设定 -->
    <dubbo:provider connections="${dubbo.provider.connections}" timeout="${dubbo.provider.timeout}" retries="${dubbo.provider.retries}" />
    <dubbo:service interface="com.polaris.demo.api.service.DemoEntryIF" ref="demoEntry" version="1.0.0">
    	<dubbo:method name="test" retries="0" loadbalance="roundrobin"/>
    </dubbo:service>
    
</beans>